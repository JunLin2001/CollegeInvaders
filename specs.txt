COLLEGE INVADERS
SOFTWARE REQUIREMENT SPECIFICATIONS

Last Revision: 5/11/2022

Links to game:
https://svn.riouxsvn.com/notspaceinv/GameCode/trunk/index.html
https://replit.com/join/axyvhnrpkk-gily-h

1. INTRODUCTION

1.1 Purpose
The purpose of this document is to implement the game “College Invaders”, based on the 1978 shooting game “Space Invaders”. It should be playable by the general public, but is not intended to be used in any commercial setting. Rather, it is primarily for educational purposes and is expected to stay within academia, particularly Brooklyn College.

1.2 Scope
“Space Invaders” was developed by game developer Taito and published in North America and Europe by Midway. One of the most well-known video games made, it helped to set the stage for arcade gaming and is one of the first examples of a “fixed shooter” game where the player and enemies are confined to a single screen with limited movement. We will create a version of this game that is college-themed.

1.3 Overview
The rest of this document contains project requirements; a description of startup, controls, gameplay, and graphics; and finally, what software will be used to implement the game.

2. PROJECT REQUIREMENTS

This project is completely independent and self-contained.

Gameplay must be similar to the 1978 game. It must be a shooting game, it must have a moveable player and moving enemies, and enemies must respawn.
Keep in mind the following points:
This is a single-player game: only one user may play it in the same browser tab at the same time.
There is only one user class: the player.
Limited movement: The player cannot move up or down the screen.
Three strikes and you're out: Poor gameplay is punished. The game ends at 0 lives.
Get the high score: A simple scoring system must be in place.
Keep it college themed: This is College Invaders, not Space Invaders. All environments and enemies should take inspiration from locations and roles present in higher education.

The game must be able to run in commonly used web browsers, including Chrome, Firefox, and Safari. That is the only operating environment requirement; the game should be able to run on any machine, as long as the machine has a web browser.

There is really no back-end existing as a separate entity from the front-end. Almost no data has to be stored for the game to run.

Javascript must be included as one of the languages the game is written in, per department requirements.

3. STARTUP

The game should begin with a screen that displays the title and a basic menu in the following format:

COLLEGE INVADERS

Play Game
How To Play
Controls

The player should be able to navigate this menu with either mouse or arrow keys. On web, text on the bottom left of the game window will say "Press 'Enter' to select an option". Play Game starts the game. How To Play provides in-universe background and is for entertainment, but also tells the player: eliminate as many enemies and survive as long as possible for the high score, and game over if the enemies reach the bottom of the screen. Controls tells the player how to operate the game, detailed in section 4.

4. CONTROLS

4.1. Menu Controls
On web:
Move up one item: up arrow key; moves to bottom if already at top
Move down one item: down arrow key; moves to top if already at bottom
Confirm selected option: enter/return key
On mobile:
Tap the item to select it

4.2. Game Controls
On web:
Move Left: left arrow key
Move right: right arrow key
Fire: "V" key on web
On mobile:
Move left: drag student character left
Move right: drag student character right
Fire: tap student character

5. GAMEPLAY

5.1. Objective
The goal of the game is simple: Destroy all invaders before they reach the bottom of the screen. Invaders move from left to right as a wave consisting of five rows of eleven enemies each. 
The invaders descend one row if they touch one side of the gameplay screen. The entire invading force slowly increases in speed as it descends, making it harder for the player to destroy them. The game ends if a single invader reaches the bottom or if the player runs out of lives. Destroy all invaders to clear the level and proceed to the next wave.
Players can choose to hide behind a set of fortifications that are present at the start of the game.

5.2. Player Mechanics
Player movement is restricted to the bottom of the playing field. The player character can only move to the left or to the right at a fixed speed. They must maneuver between enemy projectiles while ensuring their own projectiles hit enemies.
The player character always has the ability to fire a basic projectile that moves parallel to the Y-axis at a fixed speed. This projectile continues until it hits the enemy, an enemy projectile, or the top of the screen. All enemies are destroyed in a single hit. Clashing projectiles will destroy each other or destroy your projectile while continuing movement depending on the type of enemy projectile. The player character is destroyed if they take damage from one projectile.
When the player fires a projectile, they must wait 2.3 seconds to fire the next one.

5.3. Enemy Mechanics
Invaders move from the top of the screen starting from left to right. They proceed one row down the screen and move to the other side until they hit the next row, repeating the process. The entire army of invaders accelerates according to how far they have descended down the y-axis, becoming harder to hit. The invaders win if they reach a certain row slightly above the player's own.
Invaders can fire different projectiles, indicated by the enemy type.

5.4. Enemy Types
Invaders come in at least two different types. They should depict professors, deans, and trustees. Deans and trustees should be more difficult to eliminate than professors.

5.4.1. Bonus Enemy
This invader does not attack. Appears above the wave and moves back and forth before briefly disappearing. Destroying it grants additional points.
Other enemies may be decided based on remaining time.

5.5. Defenses
Each level provides the player four structures placed a short distance above the player character’s movement zone. The player can hide behind these structures in order to evade enemy attacks. These structures will be damaged by any projectile that hits them, no matter if it is from the player or an invader. Structures should change to show the damage from these projectiles and create openings that new projectiles can pass through.
The structures will be restored to perfect condition whenever the player clears the current wave/level.

5.6. Scoring
Each enemy killed grants 250 points.
Every 10,000 points, one life will be added until there are 6 lives, which is to be the maximum. This counter will be incremented every 10,000 points, so the player will always gain a life at 10,000 points, 20,000 points, 30,000 points, and so on. The counter will not reset when the player loses a life.

5.7. Game Over
When the player has lost all their lives, they are presented with a static Game Over screen, providing the option to return to the startup menu. When they exit their one highest score is preserved. No other scores are preserved. When the browser tab is closed, this data is lost.

6. GRAPHICS

6.1. Resolution
Design the game with a 640 x 480 resolution in mind.
640 X 480 is a great resolution for smaller web games for desktop and laptops. It is still a little small, so will also work for most phones. You can easily scale the canvas to another size to achieve a full screen effect. Because it is so small, there is often very few problems rendering it.

6.2. Background
The game shall have a simple background of the campus. It should be an image that does not make it difficult to see the player, projectiles, or any enemies on the screen. This image will be present behind both the actual game and the startup menu.

6.3. Startup Menu
The background image will be darkened. The text will be white. When a menu item is selected, a blue border will appear around it; otherwise items will not have borders. The font should have serifs for legibility.

6.4. Game Layout
Game layout should resemble the original Space Invaders. Very top of the screen should list Current Score and number of lives. Lives will be listed both graphically and in words.

6.5. Player Design
The player will be a student wearing a backpack. The student will have a smiley face, yellow skin, brown hair, a red shirt, blue pants, orange shoes, and a purple backpack. The student will occupy no more than 40 pixels by 40 pixels.

6.6. Enemy Design
There will be two types of enemies. Both will look similar to somewhat realistic pixel art of normal people. Unlike the original Space Invaders, the enemies will be animated.
The first enemy animation will have three frames: one with normal human eyes and a closed mouth, one with red eyes and a closed mouth, and one with red eyes and an open mouth revealing a snake-like tongue.
The second enemy will be a bald person with fangs smiling open-mouthed. This enemy will change back and forth between greyscale, and purple and green. This enemy will also wobble side to side.

6.7. Projectile Design
Enemies will shoot two types of projectiles. The first enemy will shoot papers that have an F- written in red, and illegible lines of text depicted in black. The second enemy will shoot brown textbooks labeled "Comp Sci." The student player will shoot crumpled papers.

6.8. Game Over Screen
The background will be darkened like in the startup menu. The words "Game Over" will appear at the top, followed by the user's score from the just-concluded game, and then followed by the user's high score from the current browser session. Like so:

GAME OVER

Score: <score>
High score: <high score>

Play Again?

On the bottom left there will be text saying "Press 'Enter' to play again".

7. SOFTWARE

7.1. User Interfaces
Front-end software: Javascript

7.2. Software and Hardware Interfaces
Any operating system.
A browser supporting Javascript and html.

7.3. Dependencies
The game can be written entirely in vanilla Javascript, with one index.html.
